---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-immich
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.5-v0.3.0@sha256:be3f025d79aa1b747817f478e07e71be43236e14d00d8a9eb3914146245035ba
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret-immich
  enableSuperuserAccess: true
  postgresql:
    shared_preload_libraries: ["vectors.so"]
    parameters:
      max_connections: "200"
      shared_buffers: 256MB
      max_prepared_transactions: "100"
      max_worker_processes: "32"
  resources:
    requests:
      cpu: 500m
    limits:
      hugepages-2Mi: 2Gi # Requires sysctl set on the host
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: https://35d4b5ef367c91eb592bf91567631e3d.r2.cloudflarestorage.com
      serverName: postgres-immich-v2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret-immich
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cloudnative-pg-secret-immich
          key: AWS_SECRET_ACCESS_KEY
  # # Note: previousCluster needs to be set to the name of the previous
  # # cluster when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres-immich-v2
  # # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
