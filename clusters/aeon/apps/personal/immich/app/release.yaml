---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 1h
  values:
    controllers:
      immich:
        strategy: RollingUpdate
        replicas: 3
        annotations:
          secret.reloader.stakater.com/reload: immich-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: immich-secret
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups: [3004]
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          server:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.1.0@sha256:72a9b9de6c6abfa7a9c9cdc244ae4d2bd9fea2ae00997f194cbd10aca72ea210
            envFrom:
              - secretRef:
                  name: immich-secret
            env:
              DB_PORT: "5432"
              IMMICH_CONFIG_FILE: /config/immich.config.json
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              LOG_LEVEL: verbose
              NODE_ENV: production
              REDIS_HOSTNAME: &redisHostname immich-valkey.personal.svc.cluster.local
              TZ: Europe/London
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 1024Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 5000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: &serverport 2283
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: false
      machine-learning:
        strategy: RollingUpdate
        replicas: 3
        annotations:
          secret.reloader.stakater.com/reload: immich-secret
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          ml:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v2.1.0@sha256:24bfef29bc5c0923c64c98810931eda1449a4b237e6704a715605761bc107ae4
            envFrom:
              - secretRef:
                  name: immich-secret
            env:
              DB_PORT: "5432"
              IMMICH_MEDIA_LOCATION: *mediaLocation
              LOG_LEVEL: verbose
              MPLCONFIGDIR: "/cache/matplotlib"
              NODE_ENV: production
              REDIS_HOSTNAME: *redisHostname
              TZ: Europe/London
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 1024Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 5000Mi
            probes:
              liveness: &mlprobes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &mlport 3003
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 5
              readiness: *mlprobes
              startup:
                enabled: false
      valkey:
        replicas: 1
        strategy: RollingUpdate
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          valkey:
            image:
              repository: ghcr.io/valkey-io/valkey
              tag: 8.1.4
            command: ["valkey-server", "--save", "60", "1", "--loglevel", "warning"]
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec: &probe-exec
                    command: ["sh", "-c", "valkey-cli ping | grep PONG"]
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  exec: *probe-exec
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  exec: *probe-exec
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 30

    service:
      immich:
        controller: immich
        ports:
          http:
            port: *serverport
          metrics:
            port: 8081
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: *mlport
      valkey:
        controller: valkey
        ports:
          redis:
            port: 6379

    serviceMonitor:
      immich:
        enabled: true
        serviceName: immich-immich
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.omux.io"
          - photos.omux.io
        parentRefs:
          - name: envoy-internal
            namespace: networking
            sectionName: https
        rules:
          - backendRefs:
              - port: http
                name: immich-immich

    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        advancedMounts:
          immich:
            server:
              - path: /usr/src/app/config
          machine-learning:
            ml:
              - path: /usr/src/app/config
      config-file:
        type: secret
        name: immich-config-secret
        advancedMounts:
          immich:
            server:
              - path: /config
          machine-learning:
            ml:
              - path: /config
      library:
        type: nfs
        server: tank.lan
        path: /mnt/tank/immich
        globalMounts:
          - path: *mediaLocation
      cache:
        existingClaim: immich-cache
        advancedMounts:
          machine-learning:
            ml:
              - path: /cache
                subPath: cache
              - path: /.cache
                subPath: dotCache
      valkey-data:
        existingClaim: "{{ .Release.Name }}-valkey"
        advancedMounts:
          valkey:
            valkey:
              - path: /data
      matplotlib:
        type: emptyDir
        advancedMounts:
          immich:
            server:
              - path: /config/matplotlib
      geocoding-dump:
        type: emptyDir
        advancedMounts:
          immich:
            server:
              - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        type: emptyDir
        advancedMounts:
          immich:
            server:
              - path: /usr/src/app/.transformers_cache
          machine-learning:
            ml:
              - path: /usr/src/app/.transformers_cache
      tmpfs:
        type: emptyDir
        advancedMounts:
          immich:
            server:
              - path: /tmp
                subPath: tmp
          machine-learning:
            ml:
              - path: /tmp
                subPath: tmp
          valkey:
            valkey:
              - path: /tmp
                subPath: tmp
