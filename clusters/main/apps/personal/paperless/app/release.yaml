---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      paperless:
        annotations:
          secret.reloader.stakater.com/reload: &secret paperless-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/kyteproject/postgres-init
              tag: 17
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.14.7
            env:
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /library/consume
              PAPERLESS_DATA_DIR: /library/data
              # PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_EXPORT_DIR: /library/export
              # PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_REMOTE_USER
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGES: eng
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
              PAPERLESS_PORT: &port 8000
              PAPERLESS_REDIS: redis://dragonfly.database.svc.cluster.local:6379/4
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIME_ZONE: Europe/London
              PAPERLESS_URL: https://paperless.omux.io
              USERMAP_UID: 568
              USERMAP_GID: 568
            envFrom:
              - secretRef:
                  name: *secret
            resources:
              requests:
                cpu: 100m
                memory: 1000Mi
              limits:
                memory: 5000Mi
            securityContext:
              supplementalGroups: ["568"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 30
                  timeoutSeconds: 2
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  timeoutSeconds: 1
                  failureThreshold: 10
                  periodSeconds: 12
          gotenberg:
            image:
              repository: docker.io/thecodingmachine/gotenberg
              tag: 8.17.3
            env:
              - {name: DISABLE_GOOGLE_CHROME, value: "1"}
            securityContext:
              runAsUser: 65534
              runAsGroup: 65534
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
            securityContext:
              runAsUser: 65534
              runAsGroup: 65534
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.omux.io"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - port: http
                name: app
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.omux.io"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      library:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          paperless:
            app:
              - path: /library
